#6. Procedura ce primeste ca parametri prin stiva adresa unui vector de
# intergi si lungimea sa (intreg) si inlocuieste fiecare element al
# vectorului cu modulul sau.
# Procedura isi va accesa parametrii cu $fp iar apelurile vor respecta
# conventiile MIPS si C (privind cadrul de apel, $fp, registrii salvati de
# apelant si apelat, etc.).

# Program care apeleaza procedura cu niste parametri fixati si
# afisaza (cu "syscall") mesajul "program terminat".

.data
    v:.align 2
	.word 11, 13, 12, -20, 24, 19
    n:	.align 2
	.word 6
    sep:.align 2
	.asciiz " "
    sir1:.align 2
	.asciiz "nu exista"
    sir2:.align 2
	.asciiz "nu exista"
.text
modul:
    subu $sp,4
    sw $fp, 0($sp)

    addi $fp, $sp, 4

    subu $sp, 4
    sw $s0, 0($sp)

    subu $sp, 4
    sw $s1, 0($sp)

    subu $sp, 4
    sw $s2, 0($sp)

    subu $sp, 4
    sw $s3, 0($sp)

    lw $s0, 4($fp)
    lw $s1, 0($fp)

    
loop:
    beqz $s1, restaurare
    lw $s2, 0($s0)
    blt $s2, 0, mod
    j cont_loop
mod:
    mul $s2, $s2, -1
    sw $s2, 0($s0)

cont_loop:
    sub $s1, $s1, 1
    add $s0, $s0, 4
    j loop

restaurare:
    lw $s4,-24($fp)
    lw $s3,-20($fp)
    lw $s2,-16($fp)
    lw $s1,-12($fp)
    lw $s0,-8($fp)
    lw $fp,-4($fp)
    addi $sp, 24
    jr $ra
afis:
	subu $sp, 4
	sw $fp, 0($sp)

	add $fp, $sp, 4
	
	subu $sp, 4
	sw $s0, 0($sp)

	subu $sp, 4
	sw $s1, 0($sp)

	lw $s0, 4($fp)
	lw $s1, 0($fp)

	li $t0, 0
	loop1:
		bge $t0, $s1, exit1
		lw $a0, 0($s0)
		li $v0, 1
		syscall

		la $a0, sep
		li $v0, 4
		syscall

		addi $s0, 4
		addi $t0, 1
	
		j loop1

	exit1:
	lw $s1, -12($fp)
	lw $s0, -8($fp)
	lw $fp, -4($fp)
	
	addi $sp, 12

	jr $ra    
main:
   la $t0, v
   subu $sp, 4
   sw $t0, 0($sp)

   lw $t0, n
   subu $sp, 4
   sw $t0, 0($sp)

   jal modul

   addi $sp, 8

   la $t0, v
   subu $sp, 4
   sw $t0, 0($sp)

   lw $t0, n
   subu $sp, 4
   sw $t0, 0($sp)

   jal afis

   addi $sp, 8

   
exit:
    li $v0, 10
    syscall